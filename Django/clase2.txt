Para no usar la clase HttpResponse, tenemos un sistema de plantillas.
Dentro de la carpeta de la aplicación creamos una carpeta llamada templates. Ahí dentro ubicamos 
las plantillas HTML que vayamos a usar.

En la vista que vaya a usar la plantilla, devolvemos el HTML con la función render.

---------------------------
from django.shortcuts import render

def index(request):
    ctx = {"nombre": "Juan",
           "cursos": 5,
           "curso_actual": {"nombre": "Python y Django", "turno": "noche"},
           "cursos_anteriores": ["Java", "PHP", "JavaScript", "Python"]
           }
    return render(request, "myapp/index.html", ctx)

---------------------------

La variable ctx es la de contexto, tiene que ser un diccionario que le va a pasar variables al HTML
para usarlas ahí.

CONDICIONALES
-------------

Los condicionales van dentro de las plantillas encerrados entre llaves y símbolos porcentuales:

{% if <condicion> %}

    // Bloque de código

{% elif <2da_condicion> %}

    // Bloque de código

{% else %}

    // Bloque de código

{% endif %}


BUCLES
------

Enmarcamos el bucle for dentro de las etiquetas que maneja Django

    <h1>Listado de Cursos Hechos</h1>
    <ul>
        {% for curso in cursos_anteriores %}
            <li>{{ curso }}</li>
        {% endfor %}
    </ul>


ENLACES
-------

Podemos usar la etiqueta {% url <name> %} para hacer referencia a otras páginas del sitio.
El <name> es el nombre que le asignamos a la URL dentro de urls.py.

<a href='{% url "cursos" %}'>Ver tabla de cursos</a>


ARCHIVOS ESTATICOS
------------------

Los archivos estáticos son todos los que no son generados en tiempo real por Django. Son manejados
por el servidor web, no por el framework de Django. (CSS, JavaScript, PDFs, imágenes, etc)

Dentro de la carpeta de la aplicación se debe crear una carpeta /static/ y poner archivos ahí dentro.
(Si no cargan los archivos estáticos, se debe cambiar el valor de STATIC_URL a '/static/' dentro
de settings.py).

En la plantilla donde se vayan a cargar estos elementos, se pone arriba de todo la etiqueta:

{% load static %}

Luego en el elemento que se vaya a cargar, se debe hacer referencia a la etiqueta 
static tambien, de esta forma (pongo varios ejemplos):

<link rel="stylesheet" type="text/css" href='{% static "myapp/styles.css" %}'>

<a href='{% url "myindex" %}'>Ir al inicio</a>

<img class="imagen" src='{% static "myapp/django.png" %}' />


EXTENSION DE PLANTILLAS
-----------------------

Creamos una plantilla que va a extender a otras. En esa plantilla metemos todo el código que se repite
a través de las demás páginas. Y después en las demás páginas ponemos en la línea 1:

{% extends "<archivo_de_extension>.html" %}


